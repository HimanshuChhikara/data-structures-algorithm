REF  :  https://www.freecodecamp.org/news/js-type-coercion-explained-27ba3d9a2839/
Difference Between == and ===

use of ==
When you use 'true' == true it returns false becaue javascipt changes each string to a number and than compares

when you compare string with a number, JavaScript converts any string to a number. An empty string is always converts to zero. A string with no numeric value is converts to NaN (Not a Number), which returns false.


use of ===
is a strict equality comparison operator in JavaScript, which returns false for the values which are not of a similar type.

2 with "2" using ===, then it will return a false value. because one is string and other is number

One operator that does not trigger implicit type coercion is ===, which is called the strict equality operator. The loose equality operator == on the other hand does both comparison and type coercion if needed.

When applying == to null or undefined, numeric conversion does not happen. null equals only to null or undefined, and does not equal to anything else.

null == 0               // false, null is not converted to 0
null == null            // true
undefined == undefined  // true
null == undefined       // true

2. NaN does not equal to anything even itself:
if (value !== value) { console.log("we're dealing with NaN here") }

'true' is NaN
'False' is NaN
